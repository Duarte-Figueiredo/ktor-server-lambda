# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/openjdk:8-jdk
  environment:
    MVN_CMD: "mvn -B --settings=.settings.xml"

jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ .Branch }}-{{ checksum "pom.xml" }}
            - v2-dependencies-{{ checksum "pom.xml" }}
            - v2-dependencies-

      - run:
          name: Installing module dependencies
          command: $MVN_CMD clean install -DskipTests -Dktlint.skip

      - run:
          name: Going offline...
          command: $MVN_CMD dependency:resolve-plugins dependency:go-offline

      - save_cache:
          paths:
            - ../.m2
          key: v2-dependencies-{{ .Branch }}-{{ checksum "pom.xml" }}

  verify:
    <<: *defaults
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ .Branch }}-{{ checksum "pom.xml" }}
            - v2-dependencies-{{ checksum "pom.xml" }}
            - v2-dependencies-
      - run:
          name: Running ktlint
          command: $MVN_CMD ktlint:check

      - run:
          name: Running tests
          command: $MVN_CMD verify -Dktlint.skip

  deploy:
    <<: *defaults
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run:
          name: Update version &  Deploy Master to Maven Central
          command: |
            # Get proper Git credentials with which "mvn release" can
            # commit. Temporary credentials in environment are for read-only
            # access.
            mkdir -p ~/.ssh
            echo "${GIT_KEY_BASE64}" | base64 -d > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            # probably not needed: ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
            # Else you're in "detached-head" state
            # git checkout $CIRCLE_BRANCH
            # maybe needed but not accessible info: git config --global user.email $GITLAB_USER_EMAIL
            git config --global user.name "${CIRCLE_USERNAME} via GL"
            # set up gpg for signing the release artifact
            echo $GPG_SECRET_BASE64 | base64 --decode | gpg --import --no-tty --batch --yes
            echo $GPG_OWNERTRUST_BASE64 | base64 --decode | gpg --import-ownertrust --no-tty --batch --yes
            # Comment prefix [ci skip] prevents pipeline to trigger itself
            $MVN_CMD release:prepare -DscmCommentPrefix="[ci skip]" -Darguments="-DskipTests"
            $MVN_CMD release:perform -DscmCommentPrefix="[ci skip]" -Darguments="-DskipTests \
                -Poss.release-sign-artifacts \
                -Dgpg.executable=gpg \
                -Dgpg.passphrase=$GPG_PASSPHRASE \
                -pl='!ktor-server-lambda-sample'"
            # Original origin of cloned repository is associated with a URL only
            # usable for read-only access. Defining a second one for pushing commits.
            # There also is a way to ask a project about its "ssh url" via REST api - couldn't
            # get it to work, hence, the work-around.
            SSH_REPO_URL=$($MVN_CMD help:effective-pom --non-recursive | grep developerConnection | sed 's/<.*>scm:git://g' | sed 's/<.*//g')
            git remote add origin-ssh $SSH_REPO_URL
            git tag
            git fetch -p origin-ssh
            git merge FETCH_HEAD
            git push origin-ssh --tags
            git push origin-ssh

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - verify:
          requires:
            - build
      - deploy:
          requires:
            - verify
          filters:
            branches:
              only: issue15-release-plugin
